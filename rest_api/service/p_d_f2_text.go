// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PDF2TextHandlerFunc turns a function with the right signature into a p d f2 text handler
type PDF2TextHandlerFunc func(PDF2TextParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PDF2TextHandlerFunc) Handle(params PDF2TextParams) middleware.Responder {
	return fn(params)
}

// PDF2TextHandler interface for that can handle valid p d f2 text params
type PDF2TextHandler interface {
	Handle(PDF2TextParams) middleware.Responder
}

// NewPDF2Text creates a new http.Handler for the p d f2 text operation
func NewPDF2Text(ctx *middleware.Context, handler PDF2TextHandler) *PDF2Text {
	return &PDF2Text{Context: ctx, Handler: handler}
}

/*
	PDF2Text swagger:route POST / pdf2text reverse_proxy pDF2Text

convert pdf to text

convert pdf to text
*/
type PDF2Text struct {
	Context *middleware.Context
	Handler PDF2TextHandler
}

func (o *PDF2Text) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPDF2TextParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
